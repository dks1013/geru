좋아요 — 모바일 취약점 테스트용 Frida 스크립트를 바로 만들어드릴게요. 아래 스크립트는 Android/Java 환경을 가정합니다. Test.test.test 클래스의 toParamJSONString 메서드(오버로드된 버전들을 포함)를 모두 후킹해서, 전달된 인자들 중 문자열 "12345678"을 발견하면 "87654321"로 실시간으로 변조합니다.

> 사용 전 주의: 본 코드는 합법적인 테스트(자신이 권한을 가진 시스템)에만 사용하세요. 무단 침투/악용은 불법입니다.




---

Frida 스크립트 (hook.js)

// hook.js
Java.perform(function () {
    try {
        var clazzName = "Test.test.test"; // 클래스 이름 (필요에 따라 수정)
        var cls = Java.use(clazzName);
        if (!cls) {
            console.log("클래스를 찾을 수 없습니다: " + clazzName);
            return;
        }

        // toParamJSONString 메서드가 존재하는지 확인
        if (typeof cls.toParamJSONString === "undefined") {
            console.log("메서드 toParamJSONString 없음");
            return;
        }

        // 모든 오버로드된 버전을 순회하며 후킹
        var overloads = cls.toParamJSONString.overloads;
        for (var i = 0; i < overloads.length; i++) {
            (function (idx) {
                var orig = overloads[idx].implementation; // 원래 구현 저장
                overloads[idx].implementation = function () {
                    // arguments -> 배열로 변환
                    var args = Array.prototype.slice.call(arguments);

                    // 각 인자 검사 — 문자열이고 "12345678"이면 "87654321"로 바꿈
                    for (var j = 0; j < args.length; j++) {
                        try {
                            if (typeof args[j] === "string" && args[j] === "12345678") {
                                console.log("toParamJSONString: argument 변경됨 -> '12345678' => '87654321'");
                                args[j] = "87654321";
                            }
                        } catch (e) {
                            // 안전하게 무시
                        }
                    }

                    // 원래 메서드 호출 (저장해둔 orig을 사용)
                    return orig.apply(this, args);
                };
                console.log("후킹 완료: toParamJSONString overload[" + idx + "]");
            })(i);
        }

    } catch (err) {
        console.log("오류: " + err);
    }
});


---

사용 방법

1. 위 내용을 hook.js로 저장하세요.


2. 테스트 장치에 frida-server가 실행 중이고, 디바이스에 접근 권한(루팅 또는 디버그 가능한 환경)이 있어야 합니다.


3. 앱 실행 전이나 실행 중에 다음처럼 실행할 수 있습니다:



앱을 새로 띄워서 Frida로 인젝션:

frida -U -f com.example.package -l hook.js --no-pause

이미 실행 중인 프로세스에 붙이기:

frida -U -p <pid> -l hook.js


4. 콘솔에서 "toParamJSONString: argument 변경됨 ..."  로그가 보이면 변조가 잘 작동하는 것입니다.




---

추가 팁 / 변형

클래스 이름(패키지 경로)이나 메서드 이름이 다르면 clazzName 과 toParamJSONString 을 실제 값으로 바꿔 주세요.

만약 메서드가 static이라면 동일한 스크립트로 동작합니다(Frida가 this 없이도 처리).

특정 시그니처(예: overload('java.lang.String'))만 후킹하고 싶으면 overload(...) 식으로 정확한 타입을 지정하는 방식으로 줄일 수 있습니다.

iOS(Objective-C/Swift) 쪽 후킹이 필요하면 알려주세요 — ObjC용 스크립트도 제공해 드립니다.


원하시면 바로 iOS 버전 또는 (메서드 시그니처를 정확히 알고 있다면) 특정 오버로드만 후킹하는 스크립트로 축소한 버전도 만들어 드릴게요. 어떤 환경에서 테스트 중인지(안드로이드 패키지명 / iOS 번들 id / 메서드 시그니처 등)를 알려주시면 더 정교하게 맞춰드립니다 — 다만 요청이 없으니 우선 일반적인 Android용 스크립트로 드렸습니다.

